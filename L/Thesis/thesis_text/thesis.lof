\babel@toc {english}{}
\babel@toc {english}{}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Schematics of a spam filter system\relax }}{6}{figure.caption.8}% 
\contentsline {figure}{\numberline {2.2}{\ignorespaces Schematics of a spam classification filter \relax }}{7}{figure.caption.9}% 
\contentsline {figure}{\numberline {2.3}{\ignorespaces Splitting of the known instances set. \relax }}{8}{figure.caption.10}% 
\contentsline {figure}{\numberline {2.4}{\ignorespaces Course of the $\epsilon $-insensitive loss function\relax }}{15}{figure.caption.12}% 
\contentsline {figure}{\numberline {2.5}{\ignorespaces Overview of the different phases and blocks of the FS LS-SVM algorithm.\relax }}{24}{figure.caption.13}% 
\contentsline {figure}{\numberline {2.6}{\ignorespaces The different steps in a tuning phase.\relax }}{26}{figure.caption.14}% 
\contentsline {figure}{\numberline {2.7}{\ignorespaces A detailed overview of the fast $v$-fold crossvalidation algorithm\relax }}{28}{figure.caption.18}% 
\contentsline {figure}{\numberline {2.8}{\ignorespaces Number of transistor per microprocessor.\cite {rupp_2015}\relax }}{29}{figure.caption.19}% 
\contentsline {figure}{\numberline {2.9}{\ignorespaces Thread Fork Join principle. In (a) only the main thread is executing a stream of instructions. In (b) the main thread forked into multiple threads, multiple streams are available here. In (c) the main thread terminated the other threads and joined them back into itself.\relax }}{31}{figure.caption.20}% 
\contentsline {figure}{\numberline {2.10}{\ignorespaces A Taxonomy of Parallel Processor Architectures as designed by William Stallings.\relax }}{31}{figure.caption.21}% 
\contentsline {figure}{\numberline {2.11}{\ignorespaces A graphic representation of the SIMD architecture.\relax }}{32}{figure.caption.22}% 
\contentsline {figure}{\numberline {2.12}{\ignorespaces A graphic representation of a GPU architecture.\relax }}{33}{figure.caption.23}% 
\contentsline {figure}{\numberline {2.13}{\ignorespaces Typical workflow for executing CUDA code.\relax }}{35}{figure.caption.24}% 
\contentsline {figure}{\numberline {2.14}{\ignorespaces Basic overview of a CPU\relax }}{37}{figure.caption.25}% 
\contentsline {figure}{\numberline {2.15}{\ignorespaces Possible Multiple Instruction Multiple Data stream processor organization.\relax }}{37}{figure.caption.26}% 
\contentsline {figure}{\numberline {2.16}{\ignorespaces Left shows a possible process organization containing multiple threads, right shows an overview of a single thread.\relax }}{39}{figure.caption.27}% 
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces The pareto graph when 300 support vectors are used. \relax }}{50}{figure.caption.31}% 
\contentsline {figure}{\numberline {4.2}{\ignorespaces Overview of the different phases of FS LS-SVM.\relax }}{51}{figure.caption.33}% 
\contentsline {figure}{\numberline {4.3}{\ignorespaces Graphical representation of the sequential steps taken in the Nystr\"om method.\relax }}{54}{figure.caption.35}% 
\contentsline {figure}{\numberline {4.4}{\ignorespaces Left a visualization of csa that is not correct; Right a visualization of parallel csa that comes closer to reality.\relax }}{55}{figure.caption.37}% 
\contentsline {figure}{\numberline {4.5}{\ignorespaces Graphic representation of the computation steps done before starting the folds.\relax }}{56}{figure.caption.41}% 
\contentsline {figure}{\numberline {4.6}{\ignorespaces Graphical representation of the steps in a single fold.\relax }}{57}{figure.caption.43}% 
\contentsline {figure}{\numberline {4.7}{\ignorespaces Graphical representation of the nested parallel region.\relax }}{58}{figure.caption.44}% 
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces The hardware specifications of the test bench used in the MATLAB Deep Learning Container on NVIDIA GPU Cloud.\relax }}{62}{figure.caption.46}% 
\contentsline {figure}{\numberline {5.2}{\ignorespaces Mean values of the execution times on the small data set.\relax }}{68}{figure.caption.49}% 
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {B.1}{\ignorespaces MATLAB Deep Learning Container on NVIDIA GPU Cloud Benchmark Overview.\relax }}{84}{figure.caption.51}% 
\contentsline {figure}{\numberline {B.2}{\ignorespaces MATLAB Deep Learning Container on NVIDIA GPU Cloud Benchmark MTimes (double).\relax }}{84}{figure.caption.52}% 
\contentsline {figure}{\numberline {B.3}{\ignorespaces MATLAB Deep Learning Container on NVIDIA GPU Cloud Benchmark Backslash (double).\relax }}{85}{figure.caption.53}% 
\contentsline {figure}{\numberline {B.4}{\ignorespaces MATLAB Deep Learning Container on NVIDIA GPU Cloud Benchmark FFT (double).\relax }}{85}{figure.caption.54}% 
\contentsline {figure}{\numberline {B.5}{\ignorespaces MATLAB Deep Learning Container on NVIDIA GPU Cloud Benchmark MTimes (single).\relax }}{86}{figure.caption.55}% 
\contentsline {figure}{\numberline {B.6}{\ignorespaces MATLAB Deep Learning Container on NVIDIA GPU Cloud Benchmark Backslash (single).\relax }}{86}{figure.caption.56}% 
\contentsline {figure}{\numberline {B.7}{\ignorespaces MATLAB Deep Learning Container on NVIDIA GPU Cloud Benchmark FFT (single).\relax }}{87}{figure.caption.57}% 
\contentsline {figure}{\numberline {B.8}{\ignorespaces MATLAB Deep Learning Container on NVIDIA GPU Cloud Benchmark Overview Diagram.\relax }}{87}{figure.caption.58}% 
\addvspace {10\p@ }
